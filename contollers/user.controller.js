const connection = require("../DataBase/DataBaseCon");
const bcrypt = require("bcrypt");
const jwt = require("jsonwebtoken");
const moment = require("moment");
const res = require("express/lib/response");

// ________________________________________________________________________________________________________________


const createUser = (req, res) => {
    try {
        const { username, name, password, role_id, dep_id } = req.body;
        connection.execute(`SELECT * FROM usersview WHERE usersview.username = '${username}'`, (err, data) => {
           
            if (!err) {
                if (data===null) {
                    res.json({
                        inserted: false
                    })
                }else {
                 

                    const hash = bcrypt.hashSync(password, 6);
                    connection.execute(`INSERT INTO user(username,name,password,role_id,dep_id) 
                                    VALUES('${username}','${name}','${hash}','${role_id}','${dep_id}')`
                        , (err, data) => {
                            if (data) {
                                res.json({
                                    inserted: true
                                })
                            } else if (err) {
                                res.json({
                                    erroe: err
                                })
                            }
                        })
                    //   res.send(`success`);
                }
            } else {
                res.send(err);
            }

        })
    } catch (error) {
        res.json({
            error: error
        })
    }
}


// ___________________________________________________________________________________________________________
const login = (req, res) => {
    try {
        const { username, password } = req.body;
        connection.execute(`SELECT * FROM usersview WHERE usersview.username = '${username}'`, (err, [data]) => {
            if (!err) {
                if (data){
                    const match = bcrypt.compareSync(password, data.password);
                    if (match) {
                        if (!err) {
                            const token = jwt.sign({
                                id: data.id,
                                name: data.name,
                                username: data.username,
                                department: data.department,
                                department_id: data.department_id,
                                role: data.role,
                                role_id: data.role_id,
                                isloggedin:true
                            }, "fucktheduck");
                            res.json({
                                token: token,
                                auth: true
                            })
                        } else {
                            res.json({
                                error: err
                            })
                        }

                    } else {
                        res.json({
                            message: "wrong password , please try again or call administrator !"
                        })
                    }
                } else {
                    res.send({
                        message: "this username is not exist on the system",
                    })
                }
            } else {
                res.json({
                    error: err
                })
            }
        });

    } catch (error) {
        res.json({
            error: error
        })
    }
}

// ____________________________________________((((((HOUSEKEEPING AND ENGINEERING))))))___________________________________


// ___________________________________________________________________________________________________________________________________________________________________
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


const listproblems = (req, res) => { //_______________________________FRONT OFFICE AND GUEST RELATION AND ADMIN____________________________________________________
    try {
        let pageNumber = req.query.page ? Number(req.query.page) : 1;
        connection.execute(`SELECT * FROM problemview`, (err, data) => {
            if (!err) {
                res.json({
                    problems: data
                })
            } else {
                res.json({
                    error: err
                })
            }
        })
    } catch (error) {
        res.json({
            error: err
        })
    }

}



// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


const listdepartments = (req, res) => { //_______________________________FRONT OFFICE AND GUEST RELATION AND ADMIN____________________________________________________
    try {

        connection.execute(`SELECT * FROM department`, (err, data) => {
            if (!err) {
                res.json({
                    departments: data
                })
            } else {
                res.json({
                    error: err
                })
            }
        })
    } catch (error) {
        res.json({
            error: err
        })
    }

}


const listroles = (req, res) => { //_______________________________FRONT OFFICE AND GUEST RELATION AND ADMIN____________________________________________________
    try {

        connection.execute(`SELECT * FROM role`, (err, data) => {
            if (!err) {
                res.json({
                    roles: data
                })
            } else {
                res.json({
                    error: err
                })
            }
        })
    } catch (error) {
        res.json({
            error: err
        })
    }

}

// ___________________________________________________________________________________________________________________________________________________________________
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ___________________________________________________________________________________________________________________________________________________________________
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



// ___________________________________________________________________________________________________________



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

const createWorker = (req, res) => {
    try {
        const { username, name, department_id } = req.body;
        connection.execute(`SELECT * FROM worker WHERE worker.username='${username}' `, (err, [data]) => {
            if (!data) {
                connection.execute(`INSERT INTO worker(username,name,department_id) VALUES('${username}','${name}','${department_id}')`, (err, data) => {
                    if (!err) {
                        res.json({
                            inserted: true
                        })
                    } else {
                        res.json({
                            error: err
                        })
                    }
                })
            } else {
                res.json({
                    inserted: false
                })
            }
        })
    } catch (error) {
        res.json({
            error: error
        })
    }
}




// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
const getWorkers = (req, res) => {
    try {
        const token = req.header("token");
        const decodedToken = jwt.verify(token, "fucktheduck");
   
        connection.execute(`SELECT * FROM workerview WHERE workerview.department= '${decodedToken.department}'`, (err, data) => {
            if (!err) {
                res.json({
                    Workers: data
                })
            } else {
                res.json({
                    error: err
                })
            }
        })
    } catch (error) {
        throw error ; 
    }
}
////////////////////////////////////////////////////////////////////////////////////////

const getSystemUsers =(req, res)=>{
    try {

        connection.execute(`SELECT * FROM systemusers`, (err, data) => {
            if (!err) {
                res.json({
                    systemusers: data
                })
            } else {
                res.json({
                    error: err
                })
            }
        })
    } catch (error) {
        res.json({
            error:error
        })
    }
} 

const createProblem = (req, res) => {
    try {
        const { name, time, department_id  } = req.body;
  
                connection.execute(`INSERT INTO problem(name,time,department_id) VALUES(?,?,?)`,[name,time,department_id] ,(err, data) => {
                    if (!err) {
                        res.json({
                            inserted: true
                        })
                    } else {
                        res.json({
                            error: err
                        })
                    }
                })}catch (error) {
        res.json({
            error: error
        })
    }
}


// ________________________________________________________________________________________________________________



const createRoom = (req, res) => {
    try {
        const { roomnumber } = req.body;
  
                connection.execute(`INSERT INTO room(number) VALUES(?)`,[roomnumber ] ,(err, data) => {
                    if (!err) {
                        res.json({
                            inserted: true
                        })
                    } else {
                        res.json({
                            error: err
                        })
                    }
                })}catch (error) {
        res.json({
            error: error
        })
    }
}
//////////////////////////////////////////////////////////////////////////////


const listrooms=(req,res)=>{
    try{
        connection.execute(`SELECT * FROM room`,(err,data)=>{
            if(err){
                res.json(err) ; 
            }else{
                res.json({
                    rooms:data
                }); 
            }
        })
    }catch(err){
        res.send(err) ; 
    }
}

module.exports = {
    login,
    createUser,
    getSystemUsers,
    getWorkers,
    createWorker,
    listproblems,
    listdepartments,
    listroles,
    createProblem,
    createRoom,
    listrooms
}